{
  "nav-home": "主页",
  "nav-about": "关于我",
  "nav-projects": "项目",
  "nav-resume": "简历",

  "common-hello": "你好",
  "common-i-am": "我是",
  "common-about": "关于",

  "Tao weijie": "陶伟杰",
  "LET ME": "让我",
  "INTRODUCE": "介绍一下",
  "MYSELF": "自己",
  "Programming is an art, like writing poetry": "编程是一门艺术，就像写诗一样",
  "I am proficient in classics like": "我熟悉以下经典语言",
  "My field of Interest's are": "我的兴趣领域是",
  "software development, web development, algorithms": "软件开发, Web开发, 算法",
  "and also in areas related to": "还有",
  "Artificial Intelligence": "人工智能",
  "I also apply my passion for developing products with": "我也热衷于使用以下技术开发产品：",
  "and": "和",
  "Modern Javascript Library and Frameworks": "Javascript主流的库和框架",
  "like": "比如",
  "FIND ME BY": "在这里找到我",
  "Feel free to": "随时",
  "contact": "联系",
  "me": "我",

  "ME": "我",
  "Hi Everyone, I am": "大家好，我是",
  "Tao Weijie": "陶伟杰",
  "from Paris, France.": "来自法国巴黎。",
  "Currently I'm pursuing": "目前我正在专攻",
  "computer engineer degree": "计算机工程师学位",
  "at Epitech Paris": "，就读于巴黎的欧洲理工学院",
  "and I'm planning to study": "未来准备进修",
  "Computational Intelligence MSC.": "人工智能硕士",
  "I'm fluent in English, French and Chinese, I am very passionate about traveling": "我精通英语，法语和中文，也非常热爱旅行和探索",
  "During my spare time, some other activities that I love to do!": "在我的业余时间，我喜欢做一些其他的事情！",
  "FPV aircraft model": "FPV模型",
  "Playing Games": "电子游戏",
  "Travelling": "旅游",
  "Professional": "专业",
  "Skillset": "技能",
  "Tools": "常用",
  "I use": "工具",
  "Days I": "代码",
  "Code": "日历",

  "Projects and": "项目和",
  "Experiences": "工作经历",
  "My work experience and personal projects are listed below.": "我的工作经历和个人项目如下所示。",
  "Fullstack Developer -- Smartx": "全栈工程师 -- Smartx",
  "Maintain an enterprise order management system written in Angular Node.js and Mongodb.\n\nLeveraging my expertise in Angular and Mongodb, I successfully implemented a system to track the flow of orders, shipping and receiving information, and the status of products in the warehouse.\n\n My contributions led to an efficient and streamlined order management process, which significantly improved productivity and customer satisfaction.\n\nBy ensuring that authentication is required to access the platform, we maintained the highest level of security for our clients' data.": "维护用Angular Node.js和Mongodb编写的企业订单管理系统。\n\n我充分发挥了自己在Angular和Mongodb方面的专业知识，成功实现了该系统，用于跟踪订单流程、发货和收货信息以及仓库中产品的状态。\n\n我们项目显著提高了办公效率并且简化了订单管理过程，大大提高了生产率和客户满意度。\n\n通过确保访问平台需要身份验证，我们为客户的数据保持了最高水平的安全性。",
  "Freelance Project -- FinanceAPI": "自由职业者项目 -- FinanceAPI",
  "It's a web platform built with React, Node.js, and MongoDB, designed to efficiently manage orders and invoices.\n\nThe user-friendly dashboard provides a comprehensive list of orders, along with integration of bank statements and reimbursement forms.\n\nThe platform also includes a Fund Management System and the ability to create new orders and data can be easily exported in Excel format for convenience.\n\nAuthentication is required to access the platform, ensuring security and privacy for all users.": "这是一个用React，Node.js和MongoDB构建的Web平台，旨在有效地管理订单和发票。\n\n用户友好的仪表板提供了订单的全面列表，以及银行对账单和报销单的集成。\n\n该平台还包括资金管理系统，可以创建新订单，并且可以轻松地以Excel格式导出数据，以方便使用。\n\n访问平台需要身份验证，确保所有用户的安全和隐私。",
  "DevOps Developer -- DataRaise": "DevOps工程师 -- DataRaise",
  "My responsibility was to containerize a Talend Studio back service using Docker and Docker-compose for deployment.\n\nThrough my expertise in containerization and deployment, I successfully implemented this method, resulting in a significant improvement in the project's efficiency and scalability.\n\nContainerization allowed the project to be easily deployed and managed, while Docker-compose enabled the management of multiple containers as a single application.\n\nThis approach not only made the project more efficient but also reduced the time and effort required for deployment and maintenance.": "我的职责是使用Docker和Docker-compose容器化Talend Studio后端服务以进行部署。\n\n通过我在容器化和部署方面的专业知识，我实现了项目的容器化，从而显著提高了安装的效率和可扩展性。\n\n容器化使项目可以轻松部署和管理，而Docker-compose则允许将多个容器作为单个应用程序进行管理。\n\n这种方法不仅使项目更加高效，而且还减少了部署和维护所需的时间和精力。",
  "OWL is a mobile application that monitors driver condition through a connected watch and phone.\n\nThe watch and phone can detect signs of drowsiness or the risk of dozing off.\n\nIf such signs are detected, the driver's phone will alert them and advise them to stop to prevent any accidents.": "OWL是一款通过连接手表来检测司机身体指标的手机app。\n\n手表可以检测到疲劳或打盹的迹象并传输给手机。\n\n如果检测到这些迹象，司机的手机将提醒他们并建议他们停车休息以防止事故的发生。"
}
